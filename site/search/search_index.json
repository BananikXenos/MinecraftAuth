{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"MinecraftAuth","text":""},{"location":"#minecraftauth","title":"MinecraftAuth","text":"<p>MinecraftAuth is a library for authenticating with Mojang's authentication servers.</p> MinecraftAuth"},{"location":"MinecraftAuth/","title":"MinecraftAuth","text":""},{"location":"MinecraftAuth/#minecraftauth","title":"MinecraftAuth","text":""},{"location":"MinecraftAuth/#types","title":"Types","text":"Name Description Account Represents a Minecraft account. AuthenticationResponse Represents the response from an authentication request. DeviceAuthorizationResponse Represents the response from a device authorization request. HttpEngine Interface for HTTP request handling. HttpLibHttpEngine HTTP engine implementation using the httplib library. HttpResponse Represents an HTTP response. MCTokens Represents Minecraft Account tokens. MSTokens Represents Microsoft Account tokens. MicrosoftApiError Represents an error response from a Microsoft API request. MicrosoftOAuth MicrosoftOAuth class for handling Microsoft OAuth flows. MinecraftApiError Represents an error response from a Minecraft API request. MinecraftAuthResponse Represents the response from authenticating with Minecraft services. MinecraftProfile Represents a Minecraft player profile. StringUtils Utility class for string-related operations. XBLAuthenticationResponse Represents the response from authenticating with Xbox Live services. XSTSAuthenticationResponse Represents the response from XSTS (Xbox Secure Token Service) authentication. XboxApiError Represents an error response from Xbox APIs."},{"location":"MinecraftAuth/Account/","title":"Account","text":""},{"location":"MinecraftAuth/Account/#account","title":"Account","text":"<p>class Account</p> <p>Represents a Minecraft account.</p> <p>The Account class stores information about a Minecraft account, including the username, UUID, and tokens for both Microsoft and Minecraft.</p>"},{"location":"MinecraftAuth/Account/#variables","title":"Variables","text":"Name Description m_Username Minecraft account username. m_UUID Minecraft account UUID. m_MSTokens Microsoft Account tokens. m_MCTokens Minecraft Account tokens."},{"location":"MinecraftAuth/Account/#functions","title":"Functions","text":"Name Description Account Constructor for Account using MinecraftProfile, AuthenticationResponse, and MinecraftAuthResponse."},{"location":"MinecraftAuth/Account/#variable-details","title":"Variable Details","text":""},{"location":"MinecraftAuth/Account/#m_mctokens","title":"m_MCTokens","text":"<p>MCTokens m_MCTokens</p> <p>Minecraft Account tokens.</p>"},{"location":"MinecraftAuth/Account/#m_mstokens","title":"m_MSTokens","text":"<p>MSTokens m_MSTokens</p> <p>Microsoft Account tokens.</p>"},{"location":"MinecraftAuth/Account/#m_uuid","title":"m_UUID","text":"<p>std::string m_UUID</p> <p>Minecraft account UUID.</p>"},{"location":"MinecraftAuth/Account/#m_username","title":"m_Username","text":"<p>std::string m_Username</p> <p>Minecraft account username.</p>"},{"location":"MinecraftAuth/Account/#function-details","title":"Function Details","text":""},{"location":"MinecraftAuth/Account/#account_1","title":"Account","text":"<p>Account(const MinecraftProfile&amp; mcProfile, const AuthenticationResponse&amp; msAuth, const MinecraftAuthResponse&amp; mcAuth)</p> <p>Constructor for Account using MinecraftProfile, AuthenticationResponse, and MinecraftAuthResponse.</p> Parameter <code>mcProfile</code> MinecraftProfile containing Minecraft account information. Parameter <code>msAuth</code> AuthenticationResponse containing Microsoft Account tokens. Parameter <code>mcAuth</code> MinecraftAuthResponse containing Minecraft Account tokens."},{"location":"MinecraftAuth/AuthenticationResponse/","title":"AuthenticationResponse","text":""},{"location":"MinecraftAuth/AuthenticationResponse/#authenticationresponse","title":"AuthenticationResponse","text":"<p>struct AuthenticationResponse</p> <p>Represents the response from an authentication request.</p> <p>AuthenticationResponse stores information received as a response to an authentication request, including the token type, scope, expiration time, access token, and refresh token.</p>"},{"location":"MinecraftAuth/AuthenticationResponse/#variables","title":"Variables","text":"Name Description m_TokenType Type of the access token. m_Scope Scope of the access token. expiresIn Expiration time of the access token in seconds. m_AccessToken Access token for authentication. m_RefreshToken Refresh token for obtaining a new access token."},{"location":"MinecraftAuth/AuthenticationResponse/#functions","title":"Functions","text":"Name Description FromJson Parse a JSON string to create an AuthenticationResponse."},{"location":"MinecraftAuth/AuthenticationResponse/#variable-details","title":"Variable Details","text":""},{"location":"MinecraftAuth/AuthenticationResponse/#expiresin","title":"expiresIn","text":"<p>int expiresIn</p> <p>Expiration time of the access token in seconds.</p>"},{"location":"MinecraftAuth/AuthenticationResponse/#m_accesstoken","title":"m_AccessToken","text":"<p>std::string m_AccessToken</p> <p>Access token for authentication.</p>"},{"location":"MinecraftAuth/AuthenticationResponse/#m_refreshtoken","title":"m_RefreshToken","text":"<p>std::string m_RefreshToken</p> <p>Refresh token for obtaining a new access token.</p>"},{"location":"MinecraftAuth/AuthenticationResponse/#m_scope","title":"m_Scope","text":"<p>std::string m_Scope</p> <p>Scope of the access token.</p>"},{"location":"MinecraftAuth/AuthenticationResponse/#m_tokentype","title":"m_TokenType","text":"<p>std::string m_TokenType</p> <p>Type of the access token.</p>"},{"location":"MinecraftAuth/AuthenticationResponse/#function-details","title":"Function Details","text":""},{"location":"MinecraftAuth/AuthenticationResponse/#fromjson","title":"FromJson","text":"<p>static AuthenticationResponse FromJson(const std::string&amp; body)</p> <p>Parse a JSON string to create an AuthenticationResponse.</p> Parameter <code>body</code> JSON string representing the authentication response. Return The AuthenticationResponse parsed from the JSON."},{"location":"MinecraftAuth/DeviceAuthorizationResponse/","title":"DeviceAuthorizationResponse","text":""},{"location":"MinecraftAuth/DeviceAuthorizationResponse/#deviceauthorizationresponse","title":"DeviceAuthorizationResponse","text":"<p>struct DeviceAuthorizationResponse</p> <p>Represents the response from a device authorization request.</p> <p>DeviceAuthorizationResponse stores information received as a response to a device authorization request, including the user code, device code, verification URL, expiration time, interval, and an optional message.</p>"},{"location":"MinecraftAuth/DeviceAuthorizationResponse/#variables","title":"Variables","text":"Name Description m_UserCode User code for device authorization. m_DeviceCode Device code for device authorization. m_VerificationUrl Verification URL for the user to authorize the device. m_ExpiresIn Expiration time of the device authorization in seconds. m_Interval Interval at which the device should check for authorization. m_Message Optional message associated with the authorization."},{"location":"MinecraftAuth/DeviceAuthorizationResponse/#functions","title":"Functions","text":"Name Description FromJson Parse a JSON string to create a DeviceAuthorizationResponse."},{"location":"MinecraftAuth/DeviceAuthorizationResponse/#variable-details","title":"Variable Details","text":""},{"location":"MinecraftAuth/DeviceAuthorizationResponse/#m_devicecode","title":"m_DeviceCode","text":"<p>std::string m_DeviceCode</p> <p>Device code for device authorization.</p>"},{"location":"MinecraftAuth/DeviceAuthorizationResponse/#m_expiresin","title":"m_ExpiresIn","text":"<p>int m_ExpiresIn</p> <p>Expiration time of the device authorization in seconds.</p>"},{"location":"MinecraftAuth/DeviceAuthorizationResponse/#m_interval","title":"m_Interval","text":"<p>int m_Interval</p> <p>Interval at which the device should check for authorization.</p>"},{"location":"MinecraftAuth/DeviceAuthorizationResponse/#m_message","title":"m_Message","text":"<p>std::string m_Message</p> <p>Optional message associated with the authorization.</p>"},{"location":"MinecraftAuth/DeviceAuthorizationResponse/#m_usercode","title":"m_UserCode","text":"<p>std::string m_UserCode</p> <p>User code for device authorization.</p>"},{"location":"MinecraftAuth/DeviceAuthorizationResponse/#m_verificationurl","title":"m_VerificationUrl","text":"<p>std::string m_VerificationUrl</p> <p>Verification URL for the user to authorize the device.</p>"},{"location":"MinecraftAuth/DeviceAuthorizationResponse/#function-details","title":"Function Details","text":""},{"location":"MinecraftAuth/DeviceAuthorizationResponse/#fromjson","title":"FromJson","text":"<p>static DeviceAuthorizationResponse FromJson(const std::string&amp; body)</p> <p>Parse a JSON string to create a DeviceAuthorizationResponse.</p> Parameter <code>body</code> JSON string representing the device authorization response. Return The DeviceAuthorizationResponse parsed from the JSON."},{"location":"MinecraftAuth/HttpEngine/","title":"HttpEngine","text":""},{"location":"MinecraftAuth/HttpEngine/#httpengine","title":"HttpEngine","text":"<p>class HttpEngine</p> <p>Interface for HTTP request handling.</p> <p>The HttpEngine class defines an interface for handling HTTP requests, including methods for sending GET, POST (JSON and Form), and making generic requests. Implementations of this interface provide the actual HTTP communication functionality.</p>"},{"location":"MinecraftAuth/HttpEngine/#variables","title":"Variables","text":"Name Description FORM_URL_ENCODED Content types for HTTP requests."},{"location":"MinecraftAuth/HttpEngine/#functions","title":"Functions","text":"Name Description ~HttpEngine Virtual destructor for the HttpEngine class. GetJson Sends a GET request with optional headers and retrieves JSON response. PostJson Sends a POST request with JSON body and optional headers. PostForm Sends a POST request with form-encoded body and optional headers. MakeRequest Makes a generic HTTP request with specified method, URL, body, and headers. RequiresRequestBody Checks if a request method requires a request body."},{"location":"MinecraftAuth/HttpEngine/#variable-details","title":"Variable Details","text":""},{"location":"MinecraftAuth/HttpEngine/#form_url_encoded","title":"FORM_URL_ENCODED","text":"<p>static inline const std::string FORM_URL_ENCODED</p> <p>Content types for HTTP requests.</p>"},{"location":"MinecraftAuth/HttpEngine/#function-details","title":"Function Details","text":""},{"location":"MinecraftAuth/HttpEngine/#getjson","title":"GetJson","text":"<p>[[nodiscard]] HttpResponse GetJson(const std::string&amp; url, const std::unordered_map&lt;std::string, std::string&gt;&amp; headers = {}) const</p> <p>Sends a GET request with optional headers and retrieves JSON response.</p> Parameter <code>url</code> The URL for the GET request. Parameter <code>headers</code> Optional headers to include in the request. Return The HTTP response containing the JSON data."},{"location":"MinecraftAuth/HttpEngine/#makerequest","title":"MakeRequest","text":"<p>[[nodiscard]] virtual HttpResponse MakeRequest(const std::string&amp; method, const std::string&amp; url, const std::string&amp; body, const std::unordered_map&lt;std::string, std::string&gt;&amp; headers) const = 0</p> <p>Makes a generic HTTP request with specified method, URL, body, and headers.</p> <p>This method needs to be implemented by the concrete HTTP engine.</p> Parameter <code>method</code> The HTTP method (e.g., GET, POST, etc.). Parameter <code>url</code> The URL for the request. Parameter <code>body</code> The body of the request. Parameter <code>headers</code> Optional headers to include in the request. Return The HTTP response for the generic request."},{"location":"MinecraftAuth/HttpEngine/#postform","title":"PostForm","text":"<p>[[nodiscard]] HttpResponse PostForm(const std::string&amp; url, const std::unordered_map&lt;std::string, std::string&gt;&amp; body = {}, const std::unordered_map&lt;std::string, std::string&gt;&amp; headers = {}) const</p> <p>Sends a POST request with form-encoded body and optional headers.</p> Parameter <code>url</code> The URL for the POST request. Parameter <code>body</code> The form-encoded body to include in the request. Parameter <code>headers</code> Optional headers to include in the request. Return The HTTP response for the POST request."},{"location":"MinecraftAuth/HttpEngine/#postjson","title":"PostJson","text":"<p>[[nodiscard]] HttpResponse PostJson(const std::string&amp; url, const std::string&amp; body = {}, const std::unordered_map&lt;std::string, std::string&gt;&amp; headers = {}) const</p> <p>Sends a POST request with JSON body and optional headers.</p> Parameter <code>url</code> The URL for the POST request. Parameter <code>body</code> The JSON body to include in the request. Parameter <code>headers</code> Optional headers to include in the request. Return The HTTP response for the POST request."},{"location":"MinecraftAuth/HttpEngine/#requiresrequestbody","title":"RequiresRequestBody","text":"<p>static bool RequiresRequestBody(const std::string&amp; method)</p> <p>Checks if a request method requires a request body.</p> Parameter <code>method</code> The HTTP method to check. Return True if the method requires a request body, false otherwise."},{"location":"MinecraftAuth/HttpEngine/#httpengine_1","title":"~HttpEngine","text":"<p>virtual ~HttpEngine() = default</p> <p>Virtual destructor for the HttpEngine class.</p>"},{"location":"MinecraftAuth/HttpLibHttpEngine/","title":"HttpLibHttpEngine","text":""},{"location":"MinecraftAuth/HttpLibHttpEngine/#httplibhttpengine","title":"HttpLibHttpEngine","text":"<p>class HttpLibHttpEngine final : public HttpEngine</p> <p>HTTP engine implementation using the httplib library.</p> <p>The HttpLibHttpEngine class extends the HttpEngine interface and provides an implementation using the httplib library for making HTTP requests.</p>"},{"location":"MinecraftAuth/HttpLibHttpEngine/#functions","title":"Functions","text":"Name Description MakeRequest Makes an HTTP request using the httplib library."},{"location":"MinecraftAuth/HttpLibHttpEngine/#function-details","title":"Function Details","text":""},{"location":"MinecraftAuth/HttpLibHttpEngine/#makerequest","title":"MakeRequest","text":"<p>[[nodiscard]] HttpResponse MakeRequest(const std::string&amp; method, const std::string&amp; url, const std::string&amp; body, const std::unordered_map&lt;std::string, std::string&gt;&amp; headers) const override</p> <p>Makes an HTTP request using the httplib library.</p> Parameter <code>method</code> The HTTP method (e.g., GET, POST). Parameter <code>url</code> The URL for the HTTP request. Parameter <code>body</code> The request body for methods that support it. Parameter <code>headers</code> Additional headers to include in the request. Return The HttpResponse object representing the HTTP response. <p>@throws std::invalid_argument if the URL is in an invalid format.</p> <p>@throws std::invalid_argument if the HTTP method is invalid.</p> <p>@throws std::runtime_error if the HTTP request fails.</p>"},{"location":"MinecraftAuth/HttpResponse/","title":"HttpResponse","text":""},{"location":"MinecraftAuth/HttpResponse/#httpresponse","title":"HttpResponse","text":"<p>class HttpResponse</p> <p>Represents an HTTP response.</p> <p>The HttpResponse class encapsulates the details of an HTTP response, including the status code, message, and the response body. It provides a convenient method for deserializing the response body into a specified type using the FromJson method.</p>"},{"location":"MinecraftAuth/HttpResponse/#variables","title":"Variables","text":"Name Description m_Code The HTTP status code. m_Message The status message associated with the code. m_Body The response body as a string."},{"location":"MinecraftAuth/HttpResponse/#functions","title":"Functions","text":"Name Description HttpResponse Constructor for HttpResponse. FromJson Deserializes the response body into the specified type."},{"location":"MinecraftAuth/HttpResponse/#variable-details","title":"Variable Details","text":""},{"location":"MinecraftAuth/HttpResponse/#m_body","title":"m_Body","text":"<p>const std::string m_Body</p> <p>The response body as a string.</p>"},{"location":"MinecraftAuth/HttpResponse/#m_code","title":"m_Code","text":"<p>const int m_Code</p> <p>The HTTP status code.</p>"},{"location":"MinecraftAuth/HttpResponse/#m_message","title":"m_Message","text":"<p>const std::string m_Message</p> <p>The status message associated with the code.</p>"},{"location":"MinecraftAuth/HttpResponse/#function-details","title":"Function Details","text":""},{"location":"MinecraftAuth/HttpResponse/#fromjson","title":"FromJson","text":"<p>template&lt;typename T&gt; T FromJson()</p> <p>Deserializes the response body into the specified type.</p> <p>This method uses the FromJson method of the target type to convert the response body from JSON to the specified type.</p> Template parameter <code>T</code> The type to deserialize the response body into. Return An instance of type T populated with data from the response body."},{"location":"MinecraftAuth/HttpResponse/#httpresponse_1","title":"HttpResponse","text":"<p>HttpResponse(int code, std::string message, std::string body)</p> <p>Constructor for HttpResponse.</p> Parameter <code>code</code> The HTTP status code. Parameter <code>message</code> The status message associated with the code. Parameter <code>body</code> The response body as a string."},{"location":"MinecraftAuth/MCTokens/","title":"MCTokens","text":""},{"location":"MinecraftAuth/MCTokens/#mctokens","title":"MCTokens","text":"<p>class MCTokens</p> <p>Represents Minecraft Account tokens.</p> <p>MCTokens stores Minecraft Account tokens including access token and expiration timestamp.</p>"},{"location":"MinecraftAuth/MCTokens/#variables","title":"Variables","text":"Name Description m_AccessToken Minecraft Access Token. m_ExpiresAt Expiration timestamp."},{"location":"MinecraftAuth/MCTokens/#functions","title":"Functions","text":"Name Description MCTokens Default constructor for MCTokens. MCTokens Constructor for MCTokens using MinecraftAuthResponse."},{"location":"MinecraftAuth/MCTokens/#variable-details","title":"Variable Details","text":""},{"location":"MinecraftAuth/MCTokens/#m_accesstoken","title":"m_AccessToken","text":"<p>std::string m_AccessToken</p> <p>Minecraft Access Token.</p>"},{"location":"MinecraftAuth/MCTokens/#m_expiresat","title":"m_ExpiresAt","text":"<p>long m_ExpiresAt</p> <p>Expiration timestamp.</p>"},{"location":"MinecraftAuth/MCTokens/#function-details","title":"Function Details","text":""},{"location":"MinecraftAuth/MCTokens/#mctokens_1","title":"MCTokens","text":"<p>MCTokens() = default</p> <p>Default constructor for MCTokens.</p> <p>explicit MCTokens(const MinecraftAuthResponse&amp; auth)</p> <p>Constructor for MCTokens using MinecraftAuthResponse.</p> Parameter <code>auth</code> MinecraftAuthResponse containing Minecraft tokens."},{"location":"MinecraftAuth/MSTokens/","title":"MSTokens","text":""},{"location":"MinecraftAuth/MSTokens/#mstokens","title":"MSTokens","text":"<p>class MSTokens</p> <p>Represents Microsoft Account tokens.</p> <p>MSTokens stores Microsoft Account tokens including access token, refresh token, and expiration timestamp.</p>"},{"location":"MinecraftAuth/MSTokens/#variables","title":"Variables","text":"Name Description m_AccessToken Microsoft Access Token. m_RefreshToken Microsoft Refresh Token. m_ExpiresAt Expiration timestamp."},{"location":"MinecraftAuth/MSTokens/#functions","title":"Functions","text":"Name Description MSTokens Default constructor for MSTokens. MSTokens Constructor for MSTokens using AuthenticationResponse."},{"location":"MinecraftAuth/MSTokens/#variable-details","title":"Variable Details","text":""},{"location":"MinecraftAuth/MSTokens/#m_accesstoken","title":"m_AccessToken","text":"<p>std::string m_AccessToken</p> <p>Microsoft Access Token.</p>"},{"location":"MinecraftAuth/MSTokens/#m_expiresat","title":"m_ExpiresAt","text":"<p>long m_ExpiresAt</p> <p>Expiration timestamp.</p>"},{"location":"MinecraftAuth/MSTokens/#m_refreshtoken","title":"m_RefreshToken","text":"<p>std::string m_RefreshToken</p> <p>Microsoft Refresh Token.</p>"},{"location":"MinecraftAuth/MSTokens/#function-details","title":"Function Details","text":""},{"location":"MinecraftAuth/MSTokens/#mstokens_1","title":"MSTokens","text":"<p>MSTokens() = default</p> <p>Default constructor for MSTokens.</p> <p>explicit MSTokens(const AuthenticationResponse&amp; auth)</p> <p>Constructor for MSTokens using AuthenticationResponse.</p> Parameter <code>auth</code> AuthenticationResponse containing Microsoft tokens."},{"location":"MinecraftAuth/MicrosoftApiError/","title":"MicrosoftApiError","text":""},{"location":"MinecraftAuth/MicrosoftApiError/#microsoftapierror","title":"MicrosoftApiError","text":"<p>struct MicrosoftApiError</p> <p>Represents an error response from a Microsoft API request.</p> <p>MicrosoftApiError stores information received as an error response from a Microsoft API request, including error code, description, codes, timestamp, trace ID, correlation ID, and an optional error URI.</p>"},{"location":"MinecraftAuth/MicrosoftApiError/#variables","title":"Variables","text":"Name Description m_Error Error code or type. m_ErrorDescription Description of the error. m_ErrorCodes Error codes associated with the error. m_timestamp Timestamp when the error occurred. m_TraceId Unique identifier for tracing the error. m_CorrelationId Correlation ID for associating multiple requests. m_ErrorUri Optional URI providing more information about the error."},{"location":"MinecraftAuth/MicrosoftApiError/#functions","title":"Functions","text":"Name Description FromJson Parse a JSON string to create a MicrosoftApiError."},{"location":"MinecraftAuth/MicrosoftApiError/#variable-details","title":"Variable Details","text":""},{"location":"MinecraftAuth/MicrosoftApiError/#m_correlationid","title":"m_CorrelationId","text":"<p>std::string m_CorrelationId</p> <p>Correlation ID for associating multiple requests.</p>"},{"location":"MinecraftAuth/MicrosoftApiError/#m_error","title":"m_Error","text":"<p>std::string m_Error</p> <p>Error code or type.</p>"},{"location":"MinecraftAuth/MicrosoftApiError/#m_errorcodes","title":"m_ErrorCodes","text":"<p>std::vector&lt;int&gt; m_ErrorCodes</p> <p>Error codes associated with the error.</p>"},{"location":"MinecraftAuth/MicrosoftApiError/#m_errordescription","title":"m_ErrorDescription","text":"<p>std::string m_ErrorDescription</p> <p>Description of the error.</p>"},{"location":"MinecraftAuth/MicrosoftApiError/#m_erroruri","title":"m_ErrorUri","text":"<p>std::string m_ErrorUri</p> <p>Optional URI providing more information about the error.</p>"},{"location":"MinecraftAuth/MicrosoftApiError/#m_traceid","title":"m_TraceId","text":"<p>std::string m_TraceId</p> <p>Unique identifier for tracing the error.</p>"},{"location":"MinecraftAuth/MicrosoftApiError/#m_timestamp","title":"m_timestamp","text":"<p>std::string m_timestamp</p> <p>Timestamp when the error occurred.</p>"},{"location":"MinecraftAuth/MicrosoftApiError/#function-details","title":"Function Details","text":""},{"location":"MinecraftAuth/MicrosoftApiError/#fromjson","title":"FromJson","text":"<p>static MicrosoftApiError FromJson(const std::string&amp; body)</p> <p>Parse a JSON string to create a MicrosoftApiError.</p> Parameter <code>body</code> JSON string representing the Microsoft API error response. Return The MicrosoftApiError parsed from the JSON."},{"location":"MinecraftAuth/MicrosoftOAuth/","title":"MicrosoftOAuth","text":""},{"location":"MinecraftAuth/MicrosoftOAuth/#microsoftoauth","title":"MicrosoftOAuth","text":"<p>class MicrosoftOAuth</p> <p>MicrosoftOAuth class for handling Microsoft OAuth flows.</p> <p>This class provides functionalities for Microsoft OAuth, including device authentication, token retrieval, XBL authentication, XSTS authentication, and Minecraft authentication.</p>"},{"location":"MinecraftAuth/MicrosoftOAuth/#functions","title":"Functions","text":"Name Description DeviceAuth Initiates device authentication flow. StartDeviceAuth Starts the device authentication process. CheckDeviceAuth Checks the status of device authentication. RefreshMicrosoftAuth Refreshes the Microsoft authentication using the provided refresh token. LoginToAccount Logs in to a Minecraft account using Microsoft authentication details. ValidateAccount Validates the Minecraft account and refreshes the token if necessary. RefreshMinecraftToken Refreshes the Minecraft access token for the given account. RefreshMicrosoftToken Refreshes the Microsoft access token for the given account. AuthenticateWithXBL Authenticates with Xbox Live (XBL) using the provided authentication token. AuthenticateWithXSTS Authenticates with Xbox Secure Token Service (XSTS) using XBL authentication details. AuthenticateWithMinecraft Authenticates with Minecraft services using XBL and XSTS authentication details. GetMinecraftProfile Retrieves the Minecraft profile using the provided Minecraft authentication details."},{"location":"MinecraftAuth/MicrosoftOAuth/#function-details","title":"Function Details","text":""},{"location":"MinecraftAuth/MicrosoftOAuth/#authenticatewithminecraft","title":"AuthenticateWithMinecraft","text":"<p>static MinecraftAuthResponse AuthenticateWithMinecraft(const HttpEngine&amp; engine, const XBLAuthenticationResponse&amp; xblAuth, const XSTSAuthenticationResponse&amp; xstsAuth)</p> <p>Authenticates with Minecraft services using XBL and XSTS authentication details.</p> Parameter <code>engine</code> The HttpEngine used for making HTTP requests. Parameter <code>xblAuth</code> XBLAuthenticationResponse containing XBL authentication details. Parameter <code>xstsAuth</code> XSTSAuthenticationResponse containing XSTS authentication details. Return MinecraftAuthResponse containing Minecraft authentication details."},{"location":"MinecraftAuth/MicrosoftOAuth/#authenticatewithxbl","title":"AuthenticateWithXBL","text":"<p>static XBLAuthenticationResponse AuthenticateWithXBL(const HttpEngine&amp; engine, const std::string&amp; authToken)</p> <p>Authenticates with Xbox Live (XBL) using the provided authentication token.</p> Parameter <code>engine</code> The HttpEngine used for making HTTP requests. Parameter <code>authToken</code> Authentication token used for XBL authentication. Return XBLAuthenticationResponse containing XBL authentication details."},{"location":"MinecraftAuth/MicrosoftOAuth/#authenticatewithxsts","title":"AuthenticateWithXSTS","text":"<p>static XSTSAuthenticationResponse AuthenticateWithXSTS(const HttpEngine&amp; engine, const XBLAuthenticationResponse&amp; auth)</p> <p>Authenticates with Xbox Secure Token Service (XSTS) using XBL authentication details.</p> Parameter <code>engine</code> The HttpEngine used for making HTTP requests. Parameter <code>auth</code> XBLAuthenticationResponse containing XBL authentication details. Return XSTSAuthenticationResponse containing XSTS authentication details."},{"location":"MinecraftAuth/MicrosoftOAuth/#checkdeviceauth","title":"CheckDeviceAuth","text":"<p>static AuthenticationResponse CheckDeviceAuth(const HttpEngine&amp; engine, const DeviceAuthorizationResponse&amp; deviceAuth)</p> <p>Checks the status of device authentication.</p> Parameter <code>engine</code> The HttpEngine used for making HTTP requests. Parameter <code>deviceAuth</code> DeviceAuthorizationResponse containing device authorization details. Return AuthenticationResponse containing the access token upon successful authentication."},{"location":"MinecraftAuth/MicrosoftOAuth/#deviceauth","title":"DeviceAuth","text":"<p>static AuthenticationResponse DeviceAuth(const HttpEngine&amp; engine)</p> <p>Initiates device authentication flow.</p> Parameter <code>engine</code> The HttpEngine used for making HTTP requests. Return AuthenticationResponse containing device authentication details."},{"location":"MinecraftAuth/MicrosoftOAuth/#getminecraftprofile","title":"GetMinecraftProfile","text":"<p>static MinecraftProfile GetMinecraftProfile(const HttpEngine&amp; engine, const MinecraftAuthResponse&amp; minecraftAuth)</p> <p>Retrieves the Minecraft profile using the provided Minecraft authentication details.</p> Parameter <code>engine</code> The HttpEngine used for making HTTP requests. Parameter <code>minecraftAuth</code> MinecraftAuthResponse containing Minecraft authentication details. Return MinecraftProfile representing the Minecraft profile."},{"location":"MinecraftAuth/MicrosoftOAuth/#logintoaccount","title":"LoginToAccount","text":"<p>static Account LoginToAccount(const HttpEngine&amp; engine, const AuthenticationResponse&amp; msAuth)</p> <p>Logs in to a Minecraft account using Microsoft authentication details.</p> Parameter <code>engine</code> The HttpEngine used for making HTTP requests. Parameter <code>msAuth</code> AuthenticationResponse containing Microsoft authentication details. Return Account representing the Minecraft account."},{"location":"MinecraftAuth/MicrosoftOAuth/#refreshmicrosoftauth","title":"RefreshMicrosoftAuth","text":"<p>static AuthenticationResponse RefreshMicrosoftAuth(const HttpEngine&amp; engine, const MSTokens&amp; tokens)</p> <p>Refreshes the Microsoft authentication using the provided refresh token.</p> Parameter <code>engine</code> The HttpEngine used for making HTTP requests. Parameter <code>tokens</code> MSTokens containing the refresh token. Return AuthenticationResponse containing updated authentication details."},{"location":"MinecraftAuth/MicrosoftOAuth/#refreshmicrosofttoken","title":"RefreshMicrosoftToken","text":"<p>static void RefreshMicrosoftToken(const HttpEngine&amp; engine, Account&amp; account)</p> <p>Refreshes the Microsoft access token for the given account.</p> Parameter <code>engine</code> The HttpEngine used for making HTTP requests. Parameter <code>account</code> Account for which the Microsoft token should be refreshed."},{"location":"MinecraftAuth/MicrosoftOAuth/#refreshminecrafttoken","title":"RefreshMinecraftToken","text":"<p>static void RefreshMinecraftToken(const HttpEngine&amp; engine, Account&amp; account)</p> <p>Refreshes the Minecraft access token for the given account.</p> Parameter <code>engine</code> The HttpEngine used for making HTTP requests. Parameter <code>account</code> Account for which the Minecraft token should be refreshed."},{"location":"MinecraftAuth/MicrosoftOAuth/#startdeviceauth","title":"StartDeviceAuth","text":"<p>static DeviceAuthorizationResponse StartDeviceAuth(const HttpEngine&amp; engine)</p> <p>Starts the device authentication process.</p> Parameter <code>engine</code> The HttpEngine used for making HTTP requests. Return DeviceAuthorizationResponse containing device authorization details."},{"location":"MinecraftAuth/MicrosoftOAuth/#validateaccount","title":"ValidateAccount","text":"<p>static void ValidateAccount(const HttpEngine&amp; engine, Account&amp; account)</p> <p>Validates the Minecraft account and refreshes the token if necessary.</p> Parameter <code>engine</code> The HttpEngine used for making HTTP requests. Parameter <code>account</code> Account to be validated and updated."},{"location":"MinecraftAuth/MinecraftApiError/","title":"MinecraftApiError","text":""},{"location":"MinecraftAuth/MinecraftApiError/#minecraftapierror","title":"MinecraftApiError","text":"<p>struct MinecraftApiError</p> <p>Represents an error response from a Minecraft API request.</p> <p>MinecraftApiError stores information received as an error response from a Minecraft API request, including the request path, error type, specific error, error message, and developer-specific message.</p>"},{"location":"MinecraftAuth/MinecraftApiError/#variables","title":"Variables","text":"Name Description m_Path The path of the API request that resulted in an error. m_ErrorType The type or category of the error. m_Error Specific error code or identifier. m_ErrorMessage Descriptive error message. m_DeveloperMessage Developer-specific message providing additional context."},{"location":"MinecraftAuth/MinecraftApiError/#functions","title":"Functions","text":"Name Description FromJson Parse a JSON string to create a MinecraftApiError."},{"location":"MinecraftAuth/MinecraftApiError/#variable-details","title":"Variable Details","text":""},{"location":"MinecraftAuth/MinecraftApiError/#m_developermessage","title":"m_DeveloperMessage","text":"<p>std::string m_DeveloperMessage</p> <p>Developer-specific message providing additional context.</p>"},{"location":"MinecraftAuth/MinecraftApiError/#m_error","title":"m_Error","text":"<p>std::string m_Error</p> <p>Specific error code or identifier.</p>"},{"location":"MinecraftAuth/MinecraftApiError/#m_errormessage","title":"m_ErrorMessage","text":"<p>std::string m_ErrorMessage</p> <p>Descriptive error message.</p>"},{"location":"MinecraftAuth/MinecraftApiError/#m_errortype","title":"m_ErrorType","text":"<p>std::string m_ErrorType</p> <p>The type or category of the error.</p>"},{"location":"MinecraftAuth/MinecraftApiError/#m_path","title":"m_Path","text":"<p>std::string m_Path</p> <p>The path of the API request that resulted in an error.</p>"},{"location":"MinecraftAuth/MinecraftApiError/#function-details","title":"Function Details","text":""},{"location":"MinecraftAuth/MinecraftApiError/#fromjson","title":"FromJson","text":"<p>static MinecraftApiError FromJson(const std::string&amp; jsonStr)</p> <p>Parse a JSON string to create a MinecraftApiError.</p> Parameter <code>jsonStr</code> JSON string representing the Minecraft API error response. Return The MinecraftApiError parsed from the JSON."},{"location":"MinecraftAuth/MinecraftAuthResponse/","title":"MinecraftAuthResponse","text":""},{"location":"MinecraftAuth/MinecraftAuthResponse/#minecraftauthresponse","title":"MinecraftAuthResponse","text":"<p>struct MinecraftAuthResponse</p> <p>Represents the response from authenticating with Minecraft services.</p> <p>MinecraftAuthResponse stores information obtained when authenticating with Minecraft services, including the authenticated username, roles, access token, token type, and expiration duration.</p>"},{"location":"MinecraftAuth/MinecraftAuthResponse/#variables","title":"Variables","text":"Name Description m_Username The authenticated username. m_Roles List of roles associated with the user. m_AccessToken The access token obtained during authentication. m_TokenType The type of token (e. m_ExpiresIn Duration (in seconds) until the access token expires."},{"location":"MinecraftAuth/MinecraftAuthResponse/#functions","title":"Functions","text":"Name Description FromJson Parse a JSON string to create a MinecraftAuthResponse."},{"location":"MinecraftAuth/MinecraftAuthResponse/#variable-details","title":"Variable Details","text":""},{"location":"MinecraftAuth/MinecraftAuthResponse/#m_accesstoken","title":"m_AccessToken","text":"<p>std::string m_AccessToken</p> <p>The access token obtained during authentication.</p>"},{"location":"MinecraftAuth/MinecraftAuthResponse/#m_expiresin","title":"m_ExpiresIn","text":"<p>int m_ExpiresIn</p> <p>Duration (in seconds) until the access token expires.</p>"},{"location":"MinecraftAuth/MinecraftAuthResponse/#m_roles","title":"m_Roles","text":"<p>std::vector&lt;std::string&gt; m_Roles</p> <p>List of roles associated with the user.</p>"},{"location":"MinecraftAuth/MinecraftAuthResponse/#m_tokentype","title":"m_TokenType","text":"<p>std::string m_TokenType</p> <p>The type of token (e.g., \"Bearer\").</p>"},{"location":"MinecraftAuth/MinecraftAuthResponse/#m_username","title":"m_Username","text":"<p>std::string m_Username</p> <p>The authenticated username.</p>"},{"location":"MinecraftAuth/MinecraftAuthResponse/#function-details","title":"Function Details","text":""},{"location":"MinecraftAuth/MinecraftAuthResponse/#fromjson","title":"FromJson","text":"<p>static MinecraftAuthResponse FromJson(const std::string&amp; body)</p> <p>Parse a JSON string to create a MinecraftAuthResponse.</p> Parameter <code>body</code> JSON string representing the Minecraft authentication response. Return The MinecraftAuthResponse parsed from the JSON."},{"location":"MinecraftAuth/MinecraftProfile/","title":"MinecraftProfile","text":""},{"location":"MinecraftAuth/MinecraftProfile/#minecraftprofile","title":"MinecraftProfile","text":"<p>struct MinecraftProfile</p> <p>Represents a Minecraft player profile.</p> <p>MinecraftProfile stores information about a player's Minecraft profile, including the player's UUID, name, skins, and capes.</p>"},{"location":"MinecraftAuth/MinecraftProfile/#variables","title":"Variables","text":"Name Description m_Id UUID of the Minecraft player. m_Name Name of the Minecraft player. m_Skins JSON object representing the player's skins. m_Capes JSON object representing the player's capes."},{"location":"MinecraftAuth/MinecraftProfile/#functions","title":"Functions","text":"Name Description GetUUID Get the UUID of the Minecraft player. FromJson Parse a JSON string to create a MinecraftProfile."},{"location":"MinecraftAuth/MinecraftProfile/#variable-details","title":"Variable Details","text":""},{"location":"MinecraftAuth/MinecraftProfile/#m_capes","title":"m_Capes","text":"<p>json m_Capes</p> <p>JSON object representing the player's capes.</p>"},{"location":"MinecraftAuth/MinecraftProfile/#m_id","title":"m_Id","text":"<p>std::string m_Id</p> <p>UUID of the Minecraft player.</p>"},{"location":"MinecraftAuth/MinecraftProfile/#m_name","title":"m_Name","text":"<p>std::string m_Name</p> <p>Name of the Minecraft player.</p>"},{"location":"MinecraftAuth/MinecraftProfile/#m_skins","title":"m_Skins","text":"<p>json m_Skins</p> <p>JSON object representing the player's skins.</p>"},{"location":"MinecraftAuth/MinecraftProfile/#function-details","title":"Function Details","text":""},{"location":"MinecraftAuth/MinecraftProfile/#fromjson","title":"FromJson","text":"<p>static MinecraftProfile FromJson(const std::string&amp; body)</p> <p>Parse a JSON string to create a MinecraftProfile.</p> Parameter <code>body</code> JSON string representing the Minecraft player profile. Return The MinecraftProfile parsed from the JSON."},{"location":"MinecraftAuth/MinecraftProfile/#getuuid","title":"GetUUID","text":"<p>[[nodiscard]] std::string GetUUID() const noexcept(false)</p> <p>Get the UUID of the Minecraft player.</p> Return The UUID of the player. Throw std::runtime_error if the 'id' field is missing in the JSON."},{"location":"MinecraftAuth/StringUtils/","title":"StringUtils","text":""},{"location":"MinecraftAuth/StringUtils/#stringutils","title":"StringUtils","text":"<p>class StringUtils</p> <p>Utility class for string-related operations.</p> <p>The StringUtils class provides various string manipulation and comparison functions, including case-insensitive character and string comparison.</p>"},{"location":"MinecraftAuth/StringUtils/#functions","title":"Functions","text":"Name Description ichar_equals Case-insensitive character comparison. iequals Case-insensitive string comparison."},{"location":"MinecraftAuth/StringUtils/#function-details","title":"Function Details","text":""},{"location":"MinecraftAuth/StringUtils/#ichar_equals","title":"ichar_equals","text":"<p>static bool ichar_equals(char a, char b)</p> <p>Case-insensitive character comparison.</p> Parameter <code>a</code> The first character. Parameter <code>b</code> The second character. Return true if characters are equal ignoring case, false otherwise."},{"location":"MinecraftAuth/StringUtils/#iequals","title":"iequals","text":"<p>static bool iequals(const std::string&amp; a, const std::string&amp; b)</p> <p>Case-insensitive string comparison.</p> Parameter <code>a</code> The first string. Parameter <code>b</code> The second string. Return true if strings are equal ignoring case, false otherwise."},{"location":"MinecraftAuth/XBLAuthenticationResponse/","title":"XBLAuthenticationResponse","text":""},{"location":"MinecraftAuth/XBLAuthenticationResponse/#xblauthenticationresponse","title":"XBLAuthenticationResponse","text":"<p>struct XBLAuthenticationResponse</p> <p>Represents the response from authenticating with Xbox Live services.</p> <p>XBLAuthenticationResponse stores information obtained when authenticating with Xbox Live services, including issue instant, expiration time, token, and display claims.</p>"},{"location":"MinecraftAuth/XBLAuthenticationResponse/#variables","title":"Variables","text":"Name Description m_IssueInstant The timestamp when the token was issued. m_NotAfter The timestamp indicating when the token expires. m_Token The authentication token from Xbox Live. m_DisplayClaims Display claims associated with the user."},{"location":"MinecraftAuth/XBLAuthenticationResponse/#functions","title":"Functions","text":"Name Description GetXUID Get the XUID (Xbox User ID) from the display claims. FromJson Parse a JSON string to create an XBLAuthenticationResponse."},{"location":"MinecraftAuth/XBLAuthenticationResponse/#variable-details","title":"Variable Details","text":""},{"location":"MinecraftAuth/XBLAuthenticationResponse/#m_displayclaims","title":"m_DisplayClaims","text":"<p>json m_DisplayClaims</p> <p>Display claims associated with the user.</p>"},{"location":"MinecraftAuth/XBLAuthenticationResponse/#m_issueinstant","title":"m_IssueInstant","text":"<p>std::string m_IssueInstant</p> <p>The timestamp when the token was issued.</p>"},{"location":"MinecraftAuth/XBLAuthenticationResponse/#m_notafter","title":"m_NotAfter","text":"<p>std::string m_NotAfter</p> <p>The timestamp indicating when the token expires.</p>"},{"location":"MinecraftAuth/XBLAuthenticationResponse/#m_token","title":"m_Token","text":"<p>std::string m_Token</p> <p>The authentication token from Xbox Live.</p>"},{"location":"MinecraftAuth/XBLAuthenticationResponse/#function-details","title":"Function Details","text":""},{"location":"MinecraftAuth/XBLAuthenticationResponse/#fromjson","title":"FromJson","text":"<p>static XBLAuthenticationResponse FromJson(const std::string&amp; body)</p> <p>Parse a JSON string to create an XBLAuthenticationResponse.</p> Parameter <code>body</code> JSON string representing the Xbox Live authentication response. Return The XBLAuthenticationResponse parsed from the JSON."},{"location":"MinecraftAuth/XBLAuthenticationResponse/#getxuid","title":"GetXUID","text":"<p>[[nodiscard]] std::string GetXUID() const</p> <p>Get the XUID (Xbox User ID) from the display claims.</p> Return The Xbox User ID (XUID) extracted from the display claims."},{"location":"MinecraftAuth/XSTSAuthenticationResponse/","title":"XSTSAuthenticationResponse","text":""},{"location":"MinecraftAuth/XSTSAuthenticationResponse/#xstsauthenticationresponse","title":"XSTSAuthenticationResponse","text":"<p>struct XSTSAuthenticationResponse</p> <p>Represents the response from XSTS (Xbox Secure Token Service) authentication.</p> <p>XSTSAuthenticationResponse stores information about the XSTS authentication response, including issue instant, expiration time, authentication token, and display claims.</p>"},{"location":"MinecraftAuth/XSTSAuthenticationResponse/#variables","title":"Variables","text":"Name Description m_IssueInstant The timestamp when the token was issued. m_NotAfter The timestamp indicating when the token expires. m_Token The XSTS authentication token. m_DisplayClaims Additional claims associated with the authentication."},{"location":"MinecraftAuth/XSTSAuthenticationResponse/#functions","title":"Functions","text":"Name Description GetXUID Get the XUID (Xbox User ID) from the display claims. FromJson Parse a JSON string to create an XSTSAuthenticationResponse instance."},{"location":"MinecraftAuth/XSTSAuthenticationResponse/#variable-details","title":"Variable Details","text":""},{"location":"MinecraftAuth/XSTSAuthenticationResponse/#m_displayclaims","title":"m_DisplayClaims","text":"<p>json m_DisplayClaims</p> <p>Additional claims associated with the authentication.</p>"},{"location":"MinecraftAuth/XSTSAuthenticationResponse/#m_issueinstant","title":"m_IssueInstant","text":"<p>std::string m_IssueInstant</p> <p>The timestamp when the token was issued.</p>"},{"location":"MinecraftAuth/XSTSAuthenticationResponse/#m_notafter","title":"m_NotAfter","text":"<p>std::string m_NotAfter</p> <p>The timestamp indicating when the token expires.</p>"},{"location":"MinecraftAuth/XSTSAuthenticationResponse/#m_token","title":"m_Token","text":"<p>std::string m_Token</p> <p>The XSTS authentication token.</p>"},{"location":"MinecraftAuth/XSTSAuthenticationResponse/#function-details","title":"Function Details","text":""},{"location":"MinecraftAuth/XSTSAuthenticationResponse/#fromjson","title":"FromJson","text":"<p>static XSTSAuthenticationResponse FromJson(const std::string&amp; jsonStr)</p> <p>Parse a JSON string to create an XSTSAuthenticationResponse instance.</p> Parameter <code>jsonStr</code> JSON string representing the XSTS authentication response. Return The XSTSAuthenticationResponse instance parsed from the JSON."},{"location":"MinecraftAuth/XSTSAuthenticationResponse/#getxuid","title":"GetXUID","text":"<p>std::string GetXUID()</p> <p>Get the XUID (Xbox User ID) from the display claims.</p> Return The Xbox User ID extracted from the display claims."},{"location":"MinecraftAuth/XboxApiError/","title":"XboxApiError","text":""},{"location":"MinecraftAuth/XboxApiError/#xboxapierror","title":"XboxApiError","text":"<p>struct XboxApiError</p> <p>Represents an error response from Xbox APIs.</p> <p>XboxApiError stores information about errors returned from Xbox APIs, including identity, error code (XErr), error message, and redirection URL.</p>"},{"location":"MinecraftAuth/XboxApiError/#variables","title":"Variables","text":"Name Description m_Identity The identity associated with the error. m_XErr The error code (XErr) indicating the type of error. m_Message The error message describing the issue. m_Redirect The URL to redirect to in case of an error."},{"location":"MinecraftAuth/XboxApiError/#functions","title":"Functions","text":"Name Description FromJson Parse a JSON string to create an XboxApiError instance."},{"location":"MinecraftAuth/XboxApiError/#variable-details","title":"Variable Details","text":""},{"location":"MinecraftAuth/XboxApiError/#m_identity","title":"m_Identity","text":"<p>int m_Identity</p> <p>The identity associated with the error.</p>"},{"location":"MinecraftAuth/XboxApiError/#m_message","title":"m_Message","text":"<p>std::string m_Message</p> <p>The error message describing the issue.</p>"},{"location":"MinecraftAuth/XboxApiError/#m_redirect","title":"m_Redirect","text":"<p>std::string m_Redirect</p> <p>The URL to redirect to in case of an error.</p>"},{"location":"MinecraftAuth/XboxApiError/#m_xerr","title":"m_XErr","text":"<p>long m_XErr</p> <p>The error code (XErr) indicating the type of error.</p>"},{"location":"MinecraftAuth/XboxApiError/#function-details","title":"Function Details","text":""},{"location":"MinecraftAuth/XboxApiError/#fromjson","title":"FromJson","text":"<p>static XboxApiError FromJson(const std::string&amp; body)</p> <p>Parse a JSON string to create an XboxApiError instance.</p> Parameter <code>body</code> JSON string representing the Xbox API error response. Return The XboxApiError instance parsed from the JSON."}]}